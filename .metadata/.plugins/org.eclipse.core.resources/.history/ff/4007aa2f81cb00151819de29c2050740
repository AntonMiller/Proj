









import java.io.*;
import java.util.*;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.OutputKeys;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;

import org.w3c.dom.Document;
import org.w3c.dom.Element;










public class CSVReader {

/**
 * @param args
 */
public static void main(String[] args) {
    String fileName = "C:/Users/Ryudo/Desktop/Proj/CSV2XML/test.csv";
    ArrayList<Integer> list = new ArrayList<Integer>();
    BufferedReader br;
    String line, token;
    int i;
    try {
        br = new BufferedReader(new FileReader(fileName));
        try {
            while ((line = br.readLine()) != null) {
                StringTokenizer st = new StringTokenizer(line, ",\"");
                i = 0;
                while (st.hasMoreTokens()) {
                    token = st.nextToken();
                    //System.out.print(token);
                    //System.out.print("|");
                    if (list.size() <= i) {
                        list.add((Integer) token.length());
                    } else {
                        list.set(
                                i,
                                Math.max(list.get(i),
                                        (Integer) token.length()));
                    }
                    i++;
                }
                System.out.println();
            }

            br = new BufferedReader(new FileReader(fileName));
            while ((line = br.readLine()) != null) {
                StringTokenizer st = new StringTokenizer(line, ",\"");
                i = 0;
                while (st.hasMoreTokens()) {
                    token = st.nextToken();
                    System.out.print(token);
                    for (int j = 0; j < list.get(i) - token.length(); j++) {
                        System.out.print(" ");
                    }
                    System.out.print("");
                    i++;
                }
                System.out.println();
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    } catch (FileNotFoundException e) {
        e.printStackTrace();
    }}

 //write
    public void writeXmlFile(ArrayList<Object> list) {

        try {

            DocumentBuilderFactory dFact = DocumentBuilderFactory.newInstance();
            DocumentBuilder build = dFact.newDocumentBuilder();
            Document doc = build.newDocument();

            Element root = doc.createElement("Studentinfo");
            doc.appendChild(root);

            Element Details = doc.createElement("Details");
            root.appendChild(Details);


            for(int i=0; i<list.size(); i ++ ) {

                Element name = doc.createElement("Name");
                name.appendChild(doc.createTextNode(String.valueOf(list.get(i))));
                Details.appendChild(name);

                Element id = doc.createElement("ID");
                id.appendChild(doc.createTextNode(String.valueOf(list.get(i))));
                Details.appendChild(id);


                Element mmi = doc.createElement("Age");
                mmi.appendChild(doc.createTextNode(String.valueOf(list.get(i))));
                Details.appendChild(mmi);

            }


             // Save the document to the disk file
            TransformerFactory tranFactory = TransformerFactory.newInstance();
            Transformer aTransformer = tranFactory.newTransformer();

            // format the XML nicely
            aTransformer.setOutputProperty(OutputKeys.ENCODING, "ISO-8859-1");

            aTransformer.setOutputProperty(
                    "{http://xml.apache.org/xslt}indent-amount", "4");
            aTransformer.setOutputProperty(OutputKeys.INDENT, "yes");



            DOMSource source = new DOMSource(doc);
            try {
                FileWriter fos = new FileWriter("/home/ros.xml");
                StreamResult result = new StreamResult(fos);
                aTransformer.transform(source, result);

            } catch (IOException e) {

                e.printStackTrace();
            }



        } catch (TransformerException ex) {
            System.out.println("Error outputting document");

        } catch (ParserConfigurationException ex) {
            System.out.println("Error building document");
        }	
    
    
	}
}